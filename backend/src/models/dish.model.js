const mongoose = require("mongoose");

/**
 * @swagger
 * components:
 *   schemas:
 *     Dish:
 *       type: object
 *       required:
 *         - name
 *         - ingredients
 *         - userId
 *       properties:
 *         _id:
 *           type: string
 *           description: ID c·ªßa m√≥n ƒÉn
 *         name:
 *           type: string
 *           description: T√™n m√≥n ƒÉn
 *         description:
 *           type: string
 *           description: M√¥ t·∫£ ng·∫Øn g·ªçn v·ªÅ m√≥n ƒÉn
 *         ingredients:
 *           type: array
 *           description: Danh s√°ch nguy√™n li·ªáu v√† s·ªë l∆∞·ª£ng t∆∞∆°ng ·ª©ng
 *           items:
 *             type: object
 *             required:
 *               - ingredientId
 *               - quantity
 *             properties:
 *               ingredientId:
 *                 type: string
 *                 description: ID c·ªßa nguy√™n li·ªáu
 *               quantity:
 *                 type: number
 *                 minimum: 1
 *                 description: Kh·ªëi l∆∞·ª£ng nguy√™n li·ªáu (gram)
 *         totals:
 *           type: object
 *           description: T·ªïng gi√° tr·ªã dinh d∆∞·ª°ng c·ªßa m√≥n ƒÉn
 *           properties:
 *             calories:
 *               type: number
 *               default: 0
 *               description: T·ªïng calo
 *             protein:
 *               type: number
 *               default: 0
 *               description: T·ªïng protein (g)
 *             fat:
 *               type: number
 *               default: 0
 *               description: T·ªïng ch·∫•t b√©o (g)
 *             carbs:
 *               type: number
 *               default: 0
 *               description: T·ªïng carbohydrate (g)
 *             fiber:
 *               type: number
 *               default: 0
 *               description: T·ªïng ch·∫•t x∆° (g)
 *         userId:
 *           type: string
 *           description: ID c·ªßa ng∆∞·ªùi t·∫°o m√≥n ƒÉn
 *         type:
 *           type: string
 *           enum: [dish]
 *           default: dish
 *           description: Ki·ªÉu ph√¢n lo·∫°i ("dish" ƒë·ªÉ ph√¢n bi·ªát v·ªõi nguy√™n li·ªáu)
 *         createdAt:
 *           type: string
 *           format: date-time
 *           description: Th·ªùi ƒëi·ªÉm t·∫°o m√≥n ƒÉn
 */
const dishSchema = new mongoose.Schema({
  name: { type: String, required: true },

  description: String,

  ingredients: [
    {
      ingredientId: {
        type: mongoose.Schema.Types.ObjectId,
        ref: "Ingredient",
        required: true,
      },
      quantity: {
        type: Number,
        required: true,
        min: 1
      },
    },
  ],
  totals: {
    calories: { type: Number, default: 0 },
    protein: { type: Number, default: 0 },
    fat: { type: Number, default: 0 },
    carbs: { type: Number, default: 0 },
    fiber: { type: Number, default: 0 },
  },
  userId: {
    type: mongoose.Schema.Types.ObjectId,
    ref: "User",
    required: true,
  },
  type: {
    type: String,
    enum: ["dish"],
    default: "dish", // üí° ƒë·ªÉ ph√¢n bi·ªát v·ªõi ingredient
  },
  createdAt: { type: Date, default: Date.now },
});
const Dish = mongoose.model('Dish', dishSchema);

module.exports = Dish
